#!/bin/csh
#
# build-prelude -- recompile the prelude, saving the old one as old-prelude.*
#
#
cd $Y2
setenv PRELUDEBIN $Y2/progs/prelude/cmu
if (-e $PRELUDEBIN/Prelude.sparcf) then
  rm $PRELUDEBIN/old*
  foreach i ($PRELUDEBIN/Prelude*.{scm,sparcf})
    mv $i $PRELUDEBIN/old-$i:t
    end
  endif
$CMUCL <<EOF
;; Need a big heap to compile the prelude.
(setf ext:*bytes-consed-between-gcs* 10000000)
;; If you want to recompile
;; everything from scratch, execute the "clean" script first, or
;; else use the "compile" script to do this.
(make-package "MUMBLE-IMPLEMENTATION" :use '("LISP"))
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (ext:inhibit-warnings 1)))
(handler-bind
  ((style-warning #'(lambda (c) (muffle-warning c))))
  (load "cl-support/cl-init"))
;; Use the same compiler settings for processing the prelude.
(in-package :mumble-user)
(setf *printers* '(phase-time dump-stat))
;; The compiler barfs while compiling the interface file for the prelude,
;; so set the flag for writing it as a source file.
(setf *code-chunk-size* 300)
(setf *compile-interface* '#f)
(compile/compile *prelude-unit-filename*)
(ext:quit)
EOF
